{
  "main": {
    "id": "cb46fff6df48eb2c",
    "type": "split",
    "children": [
      {
        "id": "d79dd3376669862e",
        "type": "tabs",
        "children": [
          {
            "id": "3c21bdbb2f18629e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Queue/3. Implementing Stack Using Queues.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "3. Implementing Stack Using Queues"
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "6927101fc007c9b0",
    "type": "split",
    "children": [
      {
        "id": "8bf483df97826133",
        "type": "tabs",
        "children": [
          {
            "id": "e41e1a8b582c5b11",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical",
                "autoReveal": false
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "47293e5d03ff6759",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "cdd92dfca841194c",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 288.5
  },
  "right": {
    "id": "13c0d17639971e22",
    "type": "split",
    "children": [
      {
        "id": "6076f881a295fe3f",
        "type": "tabs",
        "children": [
          {
            "id": "9fa51a646e218451",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Arrays/Maximum Subarray Sum.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Maximum Subarray Sum"
            }
          },
          {
            "id": "1ea3d6b0a6c8a6ef",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "Arrays/Maximum Difference Between Increasing Elements.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from Maximum Difference Between Increasing Elements"
            }
          },
          {
            "id": "f519db044d43a84d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-tags",
              "title": "Tags"
            }
          },
          {
            "id": "e48c990683db0cc3",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "Recursion/Palindrome check using Recusrion.md",
                "followCursor": false,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-list",
              "title": "Outline of Palindrome check using Recusrion"
            }
          },
          {
            "id": "e902c25ec9fa3149",
            "type": "leaf",
            "state": {
              "type": "git-view",
              "state": {},
              "icon": "git-pull-request",
              "title": "Source Control"
            }
          }
        ],
        "currentTab": 4
      }
    ],
    "direction": "horizontal",
    "width": 200
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "obsidian-git:Open Git source control": false
    }
  },
  "active": "3c21bdbb2f18629e",
  "lastOpenFiles": [
    "Queue/4.Implementing Queue  using Stack.md",
    "Queue/3. Implementing Stack Using Queues.md",
    "Pasted image 20250901223801.png",
    "Queue/2.Queue using Linked List.md",
    "Queue/1. Queue using Array.md",
    "Recursion/Rope Cutting Problem.md",
    "Recursion/Subset Sum Problem.md",
    "Recursion/Tower of Hanoi.md",
    "Stack/Infix to Prefix Conversion.md",
    "Queue",
    "Stack/The Celebrity Problem.md",
    "Stack/Next greater element.md",
    "Stack/Infix to PostFix.md",
    "Stack/Evaluate Postfix Expression Using Stack.md",
    "Stack/check Valid Parenthesis.md",
    "Stack/Largest Rectangle in Histogram.md",
    "Stack/Previous Greater Element.md",
    "Stack/Stock Span Problem.md",
    "Arrays/Best time to Buy and sell Stock-1.md",
    "Arrays/Best time to Buy and sell stock-2.md",
    "Pasted image 20250731225407.png",
    "Stack/Implement Two Stacks in an Array.md",
    "Stack/Removing consecutive duplicates.md",
    "Linked List/Palindrome Linked List.md",
    "Stack",
    "Linked List/Merge Sorted Linked List.md",
    "Linked List/Swap Nodes in Pairs.md",
    "Linked List/Segregate even and Odd Nodes.md",
    "Linked List/Remove loop in Linked List.md",
    "Algorithms/Floyd's Cycle Detection Algorithm.md",
    "Pasted image 20250602232830.png",
    "Hashing",
    "Sorting",
    "Pasted image 20250521011215.png",
    "Pasted image 20250521011207.png",
    "Pasted image 20250521011153.png",
    "Pasted image 20250521011144.png",
    "Pasted image 20250521011134.png",
    "Pasted image 20250521011122.png",
    "Pasted image 20250521011108.png",
    "Searching",
    "Untitled.canvas",
    "Untitled/desktop.ini",
    "images",
    "Arrays",
    "Recursion",
    "Strings"
  ]
}